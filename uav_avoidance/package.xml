<?xml version="1.0"?>
<package>
  <name>uav_avoidance</name>
  <version>0.0.1</version>
  <description>The uav_avoidance package implements a 2 dimensional collision 
  avoidance system for the quadcopters called SWAP. On it, when two or more
  quadcopters are too close to each other, the system will command them to 
  avoid the conflict creating a virtual roundabout.
  
  The system was created only for colaborative uavs.
  Since the system is designed to work in parallel to a state machine, and not
  under it, the state machine can decide to not take the orders from swap, risking
  the uav to a collision.

  Based in the work:
     http://dx.doi.org/10.1016/j.robot.2017.01.008

     @article{ferrera2017decentralized,
      title={Decentralized safe conflict resolution for multiple robots in dense scenarios},
      author={Ferrera, Eduardo and Capit{\'a}n, Jesus and Casta{\~n}o, Angel R and Marr{\'o}n, Pedro J},
      journal={Robotics and Autonomous Systems},
      year={2017},
     publisher={Elsevier}
     }

  Please cite.
  </description>

  <author email="eduardo.ferrera@uni-due.de">		Eduardo Ferrera	</author>
  <maintainer email="eduardo.ferrera@uni-due.de">	Eduardo Ferrera	</maintainer>
  <url type="website">					www.nes.uni-due.de	</url> 

  <license>BSD</license>

  <buildtool_depend>catkin</buildtool_depend>

  <!-- Build dependencies -->
  <build_depend>roscpp</build_depend>
  <build_depend>grvc_quadrotor_hal</build_depend>
  <build_depend>grvc_quadrotor_utils</build_depend>
  <build_depend>std_msgs</build_depend>
  <build_depend>geometry_msgs</build_depend>
  <build_depend>tf</build_depend>
  <build_depend>armadillo</build_depend>
  
	grvc_quadrotor_utils
  <!-- Run dependencies -->
  <run_depend>roscpp</run_depend>
  <run_depend>grvc_quadrotor_hal</run_depend>
  <run_depend>grvc_quadrotor_utils</run_depend>
  <run_depend>std_msgs</run_depend>
  <run_depend>geometry_msgs</run_depend>
  <run_depend>tf</run_depend>
  <run_depend>armadillo</run_depend>
  
</package>
