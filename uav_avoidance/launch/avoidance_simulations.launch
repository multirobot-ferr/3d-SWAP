<!--
/*
 * Copyright (c) 2017, University of Duisburg-Essen, swap-ferr
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of swap-ferr nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
 @author Eduardo Ferrera
 @version 1.0
 @date    7/3/17 
 
 @short: Launches all necessary nodes to test swap in the simulator or in 
 the real world.
 
 Note: In the simulator, it is necessary to run uav_avoidance before the state 
 machine. Otherwise, the computational power will decrease for a moment, and will
 destabilize de uav.
  -->

<launch>
	
	<!-- Waking up all fake state machines systems -->
    <node name="auv_state_machine_1" pkg="uav_avoidance" type="delayed.sh"
		args="5 roslaunch uav_avoidance state_machine_fake.launch robot_number:=1" output="screen">
	</node>
	    
	<node name="auv_state_machine_2" pkg="uav_avoidance" type="delayed.sh"
		args="6 roslaunch uav_avoidance state_machine_fake.launch robot_number:=2">
	</node>
	
	<node name="auv_state_machine_3" pkg="uav_avoidance" type="delayed.sh"
		args="7 roslaunch uav_avoidance state_machine_fake.launch robot_number:=3">
	</node>
	
	
	<!-- Waking up all avoidance systems -->
    <node name="auv_avoidance_1" pkg="uav_avoidance" type="delayed.sh"
		args="0 roslaunch uav_avoidance avoidance.launch robot_number:=1" output="screen">
	</node>
	
	<node name="auv_avoidance_2" pkg="uav_avoidance" type="delayed.sh"
		args="1 roslaunch uav_avoidance avoidance.launch robot_number:=2">
	</node>
	
	<node name="auv_avoidance_3" pkg="uav_avoidance" type="delayed.sh"
		args="2 roslaunch uav_avoidance avoidance.launch robot_number:=3">
	</node>
    
</launch>
