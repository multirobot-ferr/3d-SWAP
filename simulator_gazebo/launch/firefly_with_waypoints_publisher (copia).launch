<?xml version="1.0"?>
<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="firefly"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/basic.world" />
    <!--arg name="world_name" value="$(find mbzirc)/world/testbed_mbzirc.world"/-->
    <!-- <arg name="debug" value="true" /> -->
    <arg name="paused" value="true" />
    <!--arg name="gui" value="true" /-->
  </include>

 <group ns="$(arg mav_name)">
  <include file="$(find mbzirc)/launch/spawn_mav.launch">
    <arg name="mav_name" value="$(arg mav_name)" />
    <arg name="model" value="$(find rotors_description)/urdf/firefly_generic_pose_sensor.gazebo" />
    <arg name="enable_logging" value="$(arg enable_logging)" />
    <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
    <arg name="log_file" value="$(arg log_file)"/>
  </include>

  <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">	
    <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
    <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
    <remap from="odemetry" to="odemetry_sensor1/odometry"/>
  </node>

  <node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen"/>
  <node name="waypoint_publisher_file" pkg="rotors_gazebo" type="waypoint_publisher_file" output="screen" args="$(find rotors_gazebo)/resource/example_waypoints_powerplant.txt"/>
  </group>

</launch>
