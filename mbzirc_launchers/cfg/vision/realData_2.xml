<?xml version="1.0"?>
<opencv_storage>
<CameraConfig>
	<!--If streaming of the image contains a pair of images, set to 1 to crop it and use only the left one. Set 0 if monocular-->
	<IsStereo>1</IsStereo>
	<!--Size of image-->
	<ImageWidth>1280</ImageWidth>
	<ImageHeight>720</ImageHeight>

	<CameraType>real</CameraType>  <!--CameraTypes: ros, real, video-->
	<CameraIndex>0</CameraIndex> <!--Index of the camera, only if CameraType is real-->
	<CameraTopic>/zed/camera/rwa</CameraTopic> <!--ROS topic for the image stream, only if CameraType is ros-->
	<VideoPath>/home/user/video.avi</VideoPath> <!--Path to a video, only if CameraType is video-->

	<!--Intrinsic matrix from camera calibration-->
	<IntrinsicMatrix type_id="opencv-matrix">
	  <rows>3</rows>
	  <cols>3</cols>
	  <dt>d</dt>
	  <data>
	    6.9517382353855157e+02 0. 6.6930171982876743e+02 0.
	    6.9336737646792437e+02 3.6224831350202550e+02 0. 0. 1.</data></IntrinsicMatrix>

	<!--Distortion coefficients from camera calibration-->
	<DistCoeffs type_id="opencv-matrix">
	  <rows>5</rows>
	  <cols>1</cols>
	  <dt>d</dt>
	  <data>
	    -1.5900738178224180e-01 1.2221682895144999e-02
	    -2.1171732515917535e-03 1.6666379555710460e-03
	    7.3872337849587117e-03</data></DistCoeffs>

	<Rectification type_id="opencv-matrix">
	  <rows>3</rows>
	  <cols>3</cols>
	  <dt>d</dt>
	  <data>
	    9.9983801551897644e-01 6.8789062983668934e-05 1.7998277449237758e-02
	    6.8831296006596898e-05 9.9997076978749899e-01
	    -7.6455760312442332e-03 -1.7998277287774422e-02
	    7.6455764113414013e-03 9.9980878530647577e-01</data></Rectification>
	<Projection type_id="opencv-matrix">
	  <rows>3</rows>
	  <cols>4</cols>
	  <dt>d</dt>
	  <data>
	    6.3794929551996165e+02 0. 7.2784994220733643e+02 0. 0.
	    6.3794929551996165e+02 3.7300988388061523e+02 0. 0. 0. 1. 0.</data></Projection>
	<RoiLeft>
	  3 19 637 694</RoiLeft>
	<!--Transformation between the camera and the body-frame of the Drone-->
	<CameraTransformation type_id="opencv-matrix">
	  <rows>4</rows>
	  <cols>4</cols>
	  <dt>d</dt>
	  <data>
	    <!-- Rotation is composed (by cols) for the vectors of the Camera CS in Drone CS-->
            <!-- Translation is composed by the postion of the desired center in Camera CS-->
	    -1.0 0.0 0 0.05
	    0.0 1.0 0.0 0.0
	    0 0.0 -1.0 0.0
	    0.0 0.0 0.0 1.0 </data></CameraTransformation>
</CameraConfig>

<!--Path to the configuration of the file for segmentation of color-->
<ccsConfig>../cfg/vision/ccsRGBYO.json</ccsConfig>

<!--Name of topic with PoseStamped message that contains the rotation of the UAV-->
<UavPoseTopic>/mavros_2/local_position/pose</UavPoseTopic>

<!--Name of topic with Float64 with the altitude of the drone, desiderable Z distance of the floor in the camera CS-->
<UavAltitudeTopic>/mavros_2/global_position/rel_alt</UavAltitudeTopic>

<!--Topic to position of UAV in map coordinates-->
<UavMapCoordinatesTopic>/mbzirc_2/hal/pose</UavMapCoordinatesTopic>

<!--Set to 1 if candidate lists needs to be published-->
<PublishData>1</PublishData>
<!--Name of topic in which the list of candidate is going to be published-->
<CandidateTopic>/mbzirc_2/candidateList</CandidateTopic>

<!--Set to 1 to see result of the algorithm in a screen, disable in a console environment-->
<VisualizeResults>1</VisualizeResults>

<!--UAV id-->
<UavId>2</UavId>

<!-- Covariance of candidates -->
<CovarianceCandidates> 5.0 </CovarianceCandidates>

<!--Max and min side of the bounding box allowed for the candidates from the segmentation-->
<MinObjectSize>0.05</MinObjectSize>
<MaxObjectSize>1.5</MaxObjectSize>

<!--Path to a image file with a mask for the input image. Pixels with value 1 are processed and with 0 not-->
<MaskImagePath>/home/user/mask.png</MaskImagePath>

</opencv_storage>
